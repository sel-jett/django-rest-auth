version: '3.5'

services:
  postgres:
    container_name: postgres
    image: postgres:15-bookworm
    environment:
      POSTGRES_USER: ${POSTGRES_USER:-postgres}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD:-changeme}
      PGDATA: /data/postgres
    volumes:
       - postgres:/data/postgres
    networks:
      - django_rest_auth
    restart: unless-stopped
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U postgres"]
      interval: 10s
      timeout: 5s
      retries: 3

  pgadmin:
    container_name: pgadmin
    image: dpage/pgadmin4:8
    environment:
      PGADMIN_DEFAULT_EMAIL: ${PGADMIN_DEFAULT_EMAIL:-pgadmin4@pgadmin.org}
      PGADMIN_DEFAULT_PASSWORD: ${PGADMIN_DEFAULT_PASSWORD:-admin}
      PGADMIN_CONFIG_SERVER_MODE: 'False'
    volumes:
       - pgadmin:/var/lib/pgadmin
    networks:
      - django_rest_auth
    restart: unless-stopped
    depends_on:
      postgres:
        condition: service_healthy
    healthcheck:
      test: ["CMD", "wget", "-O", "-", "http://localhost:80/misc/ping"]
      interval: 10s
      timeout: 5s
      retries: 3

  django:
    build:
      context: .
      dockerfile: Dockerfile
    volumes:
      - ./:/app
    environment:
      - DJANGO_SETTINGS_MODULE=django_rest_auth.settings
    networks:
      - django_rest_auth
    depends_on:
      postgres:
        condition: service_healthy
    # healthcheck:
    #   test: ["CMD", "ping -c 1 localhost:8000"]
    #   interval: 10s
    #   timeout: 5s
    #   retries: 3

  nginx:
    container_name: nginx
    image: nginx:1.25-bookworm
    volumes:
      - ./nginx.conf:/etc/nginx/nginx.conf:ro
    ports:
      - "${NGINX_PORT:-80}:80"
    depends_on:
      pgadmin:
        condition: service_healthy
    networks:
      - django_rest_auth
    restart: unless-stopped

networks:
  django_rest_auth:
    driver: bridge

volumes:
    postgres:
    pgadmin:
